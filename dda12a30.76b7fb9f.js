(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{160:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"rightToc",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"default",(function(){return s}));var n=a(1),r=a(6),i=(a(0),a(170)),b={id:"text",title:"Text"},c=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Common Events",id:"common-events",children:[]},{value:"Common Properties",id:"common-properties",children:[]},{value:"Create Properties",id:"create-properties",children:[{value:"style options: FontStyle",id:"style-options-fontstyle",children:[]},{value:"weight options: FontWeight",id:"weight-options-fontweight",children:[]}]},{value:"Element Properties",id:"element-properties",children:[{value:"boundsSize",id:"boundssize",children:[]},{value:"fontParams",id:"fontparams",children:[]},{value:"textAlignment options: HorizontalTextAlignment",id:"textalignment-options-horizontaltextalignment",children:[]}]}],l={id:"components/text",title:"Text",description:"## Description",source:"@site/../docs/components/Text.md",permalink:"/docs/components/text",sidebar:"docs",previous:{title:"Tab",permalink:"/docs/components/tab"},next:{title:"TextEdit",permalink:"/docs/components/textEdit"}},o={rightToc:c,metadata:l},p="wrapper";function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)(p,Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This is the base component of any static text element placed in your prism. These are single or multi-line text areas of UTF-8 encoded 2D text. Use them inside your prism as is, or call them from other components. Text cannot be modified by a user, but can be copied with the cursor."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import React from "react";\nimport { Text } from "magic-script-components";\n\nexport default class TextExample extends React.Component {\n  render() {\n    return (\n      <Text textSize={0.1} localPosition={[-0.3, 0, 0]}>\n        Text Example\n      </Text>\n    );\n  }\n}\n')),Object(i.b)("h2",{id:"common-events"},Object(i.b)("a",Object(n.a)({parentName:"h2"},{href:"/docs/types/events"}),"Common Events")),Object(i.b)("h2",{id:"common-properties"},Object(i.b)("a",Object(n.a)({parentName:"h2"},{href:"/docs/types/properties"}),"Common Properties")),Object(i.b)("h2",{id:"create-properties"},"Create Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"text"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The UTF-8 encoded text to initially set the text to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"style"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"td"},"normal")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The style of the Magic Leap font.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"weight"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"td"},"regular")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The weight (i.e., thickness) of the Magic Leap font.")))),Object(i.b)("p",null,"If ",Object(i.b)("inlineCode",{parentName:"p"},"text")," is empty, the content of the ",Object(i.b)("inlineCode",{parentName:"p"},"<text>")," tag will be used as text."),Object(i.b)("h3",{id:"style-options-fontstyle"},"style options: ",Object(i.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/types/fontStyle"}),"FontStyle")),Object(i.b)("h3",{id:"weight-options-fontweight"},"weight options: ",Object(i.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/types/fontWeight"}),"FontWeight")),Object(i.b)("h2",{id:"element-properties"},"Element Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"allCaps"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Displays the text in all caps if ",Object(i.b)("inlineCode",{parentName:"td"},"true"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"charSpacing"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the additional character spacing that is applied between characters. Note a spacing of ",Object(i.b)("inlineCode",{parentName:"td"},"0")," is the default spacing.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"lineSpacing"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the line spacing to adjust the distance between lines of text; e.g., use 1 for single-spaced text, 2 for double-spaced text. The default is 1.0.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"style"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the style of the Magic Leap font.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"weight"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the weight (i.e., thickness) of the Magic Leap font.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"text"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'Sets the UTF-8 encoded text. This call is ignored if there is a current localization key set. Set the localization key to an empty string, "", to unset it.')),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"textAlignment"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Aligns the text to the left, center, or right or justifies it.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"textColor"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"verc4"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the RGBA color of the rendered text.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"textSize"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the text render size height in scene units.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"boundsSize"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(i.b)("em",{parentName:"td"},"object")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the text bounds size in scene units. The default value of ",Object(i.b)("inlineCode",{parentName:"td"},"0,0")," indicates there is no bounds and the text can grow and does not wrap or truncate. Setting the bounds greater than ",Object(i.b)("inlineCode",{parentName:"td"},"0")," in both X and Y will set the text bounds and cause the text to wrap or truncate within.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"fontParams"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(i.b)("em",{parentName:"td"},"object")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the font parameters, including style, weight, pixel size, and tracking. This uses one of the default sets of Magic Leap font resources that support style and weight.")))),Object(i.b)("h3",{id:"boundssize"},"boundsSize"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"{\n    boundsSize: vec2,\n    wrap: boolean\n}\n")),Object(i.b)("h3",{id:"fontparams"},"fontParams"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"{\n    style: string,\n    weight: string,\n    fontSize: number,\n    tracking: number,\n    allCaps: boolean\n}\n")),Object(i.b)("h3",{id:"textalignment-options-horizontaltextalignment"},"textAlignment options: ",Object(i.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/types/horizontalTextAlignment"}),"HorizontalTextAlignment")))}s.isMDXComponent=!0},170:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return s}));var n=a(0),r=a.n(n),i=r.a.createContext({}),b=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},c=function(e){var t=b(e.components);return r.a.createElement(i.Provider,{value:t},e.children)};var l="mdxType",o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),p=b(a),s=n,d=p[c+"."+s]||p[s]||o[s]||i;return a?r.a.createElement(d,Object.assign({},{ref:t},l,{components:a})):r.a.createElement(d,Object.assign({},{ref:t},l))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,b=new Array(i);b[0]=p;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[l]="string"==typeof e?e:n,b[1]=c;for(var s=2;s<i;s++)b[s]=a[s];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);
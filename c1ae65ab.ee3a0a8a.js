(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{331:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(1),a=n(6),i=(n(0),n(412)),l={id:"slider",title:"Slider"},o={id:"version-2.0.2/components/slider",title:"Slider",description:"## Description",source:"@site/versioned_docs/version-2.0.2/components/Slider.md",permalink:"/docs/2.0.2/components/slider",version:"2.0.2",sidebar:"version-2.0.2/docs",previous:{title:"ScrollView",permalink:"/docs/2.0.2/components/scrollView"},next:{title:"Spinner",permalink:"/docs/2.0.2/components/spinner"}},c=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Common Events",id:"common-events",children:[]},{value:"Common Properties",id:"common-properties",children:[]},{value:"Create Properties",id:"create-properties",children:[]},{value:"Element Properties",id:"element-properties",children:[]}],s={rightToc:c};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"The Slider component places a slider into your prism. Use sliders to provide a visual reference to a specific range and the current value within that range, like a volume slider. Sliders can use either icons or labels. The default slider is white and uses 100% opacity for the active part of the slider. Sliders inherit the width from a parent component, such as ",Object(i.b)("inlineCode",{parentName:"p"},"RectLayout"),". If the slider does not have a parent, it is one meter wide unless otherwise constrained. The default minimum and maximum values in the range are ",Object(i.b)("inlineCode",{parentName:"p"},"0")," and ",Object(i.b)("inlineCode",{parentName:"p"},"1"),"."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'import React from "react";\nimport { Text, Slider, Image, LinearLayout } from "magic-script-components";\n\nexport default class MyApp extends React.Component {\n  state = {\n    red: undefined,\n    green: undefined,\n    blue: undefined,\n    alpha: undefined\n  };\n\n  onRedChanged = eventData => this.setState({ red: eventData.Value });\n  onGreenChanged = eventData => this.setState({ green: eventData.Value });\n  onBlueChanged = eventData => this.setState({ blue: eventData.Value });\n  onAlphaChanged = eventData => this.setState({ alpha: eventData.Value });\n\n  _setInitialSliderValue = (sliderProps, currentValue, initialValue) => {\n    if (currentValue === undefined) {\n      sliderProps.value = initialValue;\n    }\n    return sliderProps;\n  };\n\n  render() {\n    const sliderProps = { width: 0.8, height: 0.02, min: 0, max: 1 };\n    const redProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.red,\n      0.5\n    );\n    const greenProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.green,\n      0.5\n    );\n    const blueProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.blue,\n      0.5\n    );\n    const alphaProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.alpha,\n      0.5\n    );\n\n    const color = [\n      this.state.red === undefined ? redProps.value : this.state.red,\n      this.state.green === undefined ? greenProps.value : this.state.green,\n      this.state.blue === undefined ? blueProps.value : this.state.blue,\n      this.state.alpha === undefined ? alphaProps.value : this.state.alpha\n    ];\n\n    return (\n      <LinearLayout\n        name="main-view"\n        orientation="vertical"\n        defaultItemAlignment="center-left"\n        defaultItemPadding={[0.012, 0.012, 0.012, 0.012]}\n        localPosition={[-0.45, 0.45, 0]}\n      >\n        <Image width={0.8} height={0.3} color={color} useFrame={true} />\n        <Text textSize={0.05} textColor={[1, 0, 0, 1]} text="Red" />\n        <Slider {...redProps} onSliderChanged={this.onRedChanged} />\n        <Text textSize={0.05} textColor={[0, 1, 0, 1]} text="Green" />\n        <Slider {...greenProps} onSliderChanged={this.onGreenChanged} />\n        <Text textSize={0.05} textColor={[0, 0, 1, 1]} text="Blue" />\n        <Slider {...blueProps} onSliderChanged={this.onBlueChanged} />\n        <Text textSize={0.05} text="Alpha" />\n        <Slider {...alphaProps} onSliderChanged={this.onAlphaChanged} />\n      </LinearLayout>\n    );\n  }\n}\n')),Object(i.b)("h2",{id:"common-events"},Object(i.b)("a",Object(r.a)({parentName:"h2"},{href:"/docs/2.0.2/types/events"}),"Common Events")),Object(i.b)("h2",{id:"common-properties"},Object(i.b)("a",Object(r.a)({parentName:"h2"},{href:"/docs/2.0.2/types/properties"}),"Common Properties")),Object(i.b)("h2",{id:"create-properties"},"Create Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"width"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"number"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The width of the slider.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"height"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"number"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"0"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The height of the slider.")))),Object(i.b)("h2",{id:"element-properties"},"Element Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Type"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"min"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sets the minimum slider value. This value is set only if it is less than the slider's maximum value. The default value is ",Object(i.b)("inlineCode",{parentName:"td"},"0"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"max"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sets the maximum slider value. This value is set only if it is greater than the slider's minimum value. The default value is ",Object(i.b)("inlineCode",{parentName:"td"},"1"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"value"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sets the slider value. The value will be clamped within the current minimum and maximum range.")))))}d.isMDXComponent=!0},412:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},p=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,m=p["".concat(l,".").concat(u)]||p[u]||b[u]||i;return n?a.a.createElement(m,o({ref:t},s,{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{133:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return r})),n.d(t,"default",(function(){return d}));n(271),n(272),n(269),n(273),n(274),n(275);var a=n(270);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={id:"toggleGroup",title:"ToggleGroup"},r=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Common Events",id:"common-events",children:[]},{value:"Common Properties",id:"common-properties",children:[]},{value:"Create Properties",id:"create-properties",children:[]},{value:"Element Properties",id:"element-properties",children:[]}],g={rightToc:r},i="wrapper";function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(a.b)(i,l({},g,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"ToggleGroup represents a group of standard, clickable toggles."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-javascript"}),"import React from \"react\";\nimport { GridLayout, LinearLayout, ToggleGroup, Toggle } from \"magic-script-components\";\nexport default class MyApp extends React.Component {\n  onChangedHandler = (eventData, message) => {\n    console.log(`Toggle: ${message}`);\n  };\n\n  render() {\n    return (\n      <GridLayout\n        name='main-view'\n        columns={2}\n        rows={2}\n        defaultItemAlignment=\"center-center\"\n        defaultItemPadding={[0.03, 0.03, 0.03, 0.03]}\n        // localPosition={[-0.35, 0.35, 0]}\n        alignment='center-center'\n      >\n        <ToggleGroup key='regular-toggles-group'>\n          <LinearLayout\n            key='regular-toggles'\n            defaultItemAlignment=\"center-right\"\n            defaultItemPadding={[0.01, 0.01, 0.01, 0.01]}\n          >\n            <Toggle key='TA' text=\"Toggle A\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'TA')} />\n            <Toggle key='TB' text=\"Toggle B\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'TB')} />\n            <Toggle key='TC' text=\"Toggle C\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'TC')} />\n          </LinearLayout>\n        </ToggleGroup>\n        <ToggleGroup key='radio-toggles-group'>\n          <LinearLayout\n            key='radio-toggles'\n            defaultItemAlignment=\"center-right\"\n            defaultItemPadding={[0.01, 0.01, 0.01, 0.01]}\n          >\n            <Toggle key='RA' type='radio' text=\"Radio A\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'RA')} />\n            <Toggle key='RB' type='radio' text=\"Radio B\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'RB')} />\n            <Toggle key='RC' type='radio' text=\"Radio C\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'RC')} />\n          </LinearLayout>\n        </ToggleGroup>\n        <ToggleGroup key='regular-toggles-multi-group' allowMultipleOn={true}>\n          <LinearLayout\n            key='regular-toggles-multi'\n            defaultItemAlignment=\"center-right\"\n            defaultItemPadding={[0.01, 0.01, 0.01, 0.01]}\n          >\n            <Toggle key='TMA' text=\"Toggle MA\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'TMA')} />\n            <Toggle key='TMB' text=\"Toggle MB\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'TMB')} />\n            <Toggle key='TMC' text=\"Toggle MC\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'TMC')} />\n          </LinearLayout>\n        </ToggleGroup>\n        <ToggleGroup key='checkbox-toggles-group' allowMultipleOn={true}>\n          <LinearLayout\n            key='checkbox-toggles'\n            defaultItemAlignment=\"center-right\"\n            defaultItemPadding={[0.01, 0.01, 0.01, 0.01]}\n          >\n            <Toggle key='CA' type='checkbox' text=\"Checkbox A\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'CA')} />\n            <Toggle key='CB' type='checkbox' text=\"Checkbox B\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'CB')} />\n            <Toggle key='CC' type='checkbox' text=\"Checkbox C\" onToggleChanged={(eventData) => this.onChangedHandler(eventData, 'CC')} />\n          </LinearLayout>\n        </ToggleGroup>\n      </GridLayout>\n    );\n  }\n}\n\n")),Object(a.b)("h2",{id:"common-events"},Object(a.b)("a",l({parentName:"h2"},{href:"/docs/types/events"}),"Common Events")),Object(a.b)("h2",{id:"common-properties"},Object(a.b)("a",l({parentName:"h2"},{href:"/docs/types/properties"}),"Common Properties")),Object(a.b)("h2",{id:"create-properties"},"Create Properties"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",l({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",l({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",l({parentName:"tr"},{align:"center"}),"Default Value"),Object(a.b)("th",l({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"allowMultipleOn"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",l({parentName:"tr"},{align:"center"}),Object(a.b)("inlineCode",{parentName:"td"},"false")),Object(a.b)("td",l({parentName:"tr"},{align:null}),"The default does not allow multiple toggles ON.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"allowAllOff"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",l({parentName:"tr"},{align:"center"}),Object(a.b)("inlineCode",{parentName:"td"},"false")),Object(a.b)("td",l({parentName:"tr"},{align:null}),"The default does not allow all toggles OFF.")))),Object(a.b)("h2",{id:"element-properties"},"Element Properties"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",l({parentName:"tr"},{align:"left"}),"Name"),Object(a.b)("th",l({parentName:"tr"},{align:"left"}),"Type"),Object(a.b)("th",l({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:"left"}),"allowMultipleOn"),Object(a.b)("td",l({parentName:"tr"},{align:"left"}),"boolean"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Flags whether multiple toggles can be switched ON in the toggle group.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:"left"}),"allowAllOff"),Object(a.b)("td",l({parentName:"tr"},{align:"left"}),"boolean"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Flags whether all toggles can be switched OFF in the toggle group.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:"left"}),"allTogglesOff"),Object(a.b)("td",l({parentName:"tr"},{align:"left"}),"boolean"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Switches all toggles OFF regardless of whether all toggles can be switched off or not.")))))}d.isMDXComponent=!0}}]);
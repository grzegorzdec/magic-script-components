(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{326:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(6),i=(n(0),n(412)),c={id:"text",title:"Text"},b={id:"version-2.0.2/components/text",title:"Text",description:"## Description",source:"@site/versioned_docs/version-2.0.2/components/Text.md",permalink:"/docs/2.0.2/components/text",version:"2.0.2",sidebar:"version-2.0.2/docs",previous:{title:"Tab",permalink:"/docs/2.0.2/components/tab"},next:{title:"TextEdit",permalink:"/docs/2.0.2/components/textEdit"}},o=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Common Events",id:"common-events",children:[]},{value:"Common Properties",id:"common-properties",children:[]},{value:"Create Properties",id:"create-properties",children:[{value:"style options: FontStyle",id:"style-options-fontstyle",children:[]},{value:"weight options: FontWeight",id:"weight-options-fontweight",children:[]}]},{value:"Element Properties",id:"element-properties",children:[{value:"boundsSize",id:"boundssize",children:[]},{value:"fontParams",id:"fontparams",children:[]},{value:"textAlignment options: HorizontalTextAlignment",id:"textalignment-options-horizontaltextalignment",children:[]}]}],l={rightToc:o};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This is the base component of any static text element placed in your prism. These are single or multi-line text areas of UTF-8 encoded 2D text. Use them inside your prism as is, or call them from other components. Text cannot be modified by a user, but can be copied with the cursor."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import React from "react";\nimport { Text } from "magic-script-components";\n\nexport default class TextExample extends React.Component {\n  render() {\n    return (\n      <Text textSize={0.1} localPosition={[-0.3, 0, 0]}>\n        Text Example\n      </Text>\n    );\n  }\n}\n')),Object(i.b)("h2",{id:"common-events"},Object(i.b)("a",Object(a.a)({parentName:"h2"},{href:"/docs/2.0.2/types/events"}),"Common Events")),Object(i.b)("h2",{id:"common-properties"},Object(i.b)("a",Object(a.a)({parentName:"h2"},{href:"/docs/2.0.2/types/properties"}),"Common Properties")),Object(i.b)("h2",{id:"create-properties"},"Create Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"text"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The UTF-8 encoded text to initially set the text to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"style"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"td"},"normal")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The style of the Magic Leap font.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"weight"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"td"},"regular")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The weight (i.e., thickness) of the Magic Leap font.")))),Object(i.b)("p",null,"If ",Object(i.b)("inlineCode",{parentName:"p"},"text")," is empty, the content of the ",Object(i.b)("inlineCode",{parentName:"p"},"<text>")," tag will be used as text."),Object(i.b)("h3",{id:"style-options-fontstyle"},"style options: ",Object(i.b)("a",Object(a.a)({parentName:"h3"},{href:"/docs/2.0.2/types/fontStyle"}),"FontStyle")),Object(i.b)("h3",{id:"weight-options-fontweight"},"weight options: ",Object(i.b)("a",Object(a.a)({parentName:"h3"},{href:"/docs/2.0.2/types/fontWeight"}),"FontWeight")),Object(i.b)("h2",{id:"element-properties"},"Element Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"allCaps"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Displays the text in all caps if ",Object(i.b)("inlineCode",{parentName:"td"},"true"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"charSpacing"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the additional character spacing that is applied between characters. Note a spacing of ",Object(i.b)("inlineCode",{parentName:"td"},"0")," is the default spacing.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"lineSpacing"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the line spacing to adjust the distance between lines of text; e.g., use 1 for single-spaced text, 2 for double-spaced text. The default is 1.0.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"style"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the style of the Magic Leap font.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"weight"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the weight (i.e., thickness) of the Magic Leap font.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"text"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'Sets the UTF-8 encoded text. This call is ignored if there is a current localization key set. Set the localization key to an empty string, "", to unset it.')),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"textAlignment"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Aligns the text to the left, center, or right or justifies it.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"textColor"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"verc4"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the RGBA color of the rendered text.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"textSize"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the text render size height in scene units.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"boundsSize"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("em",{parentName:"td"},"object")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the text bounds size in scene units. The default value of ",Object(i.b)("inlineCode",{parentName:"td"},"0,0")," indicates there is no bounds and the text can grow and does not wrap or truncate. Setting the bounds greater than ",Object(i.b)("inlineCode",{parentName:"td"},"0")," in both X and Y will set the text bounds and cause the text to wrap or truncate within.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"fontParams"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("em",{parentName:"td"},"object")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the font parameters, including style, weight, pixel size, and tracking. This uses one of the default sets of Magic Leap font resources that support style and weight.")))),Object(i.b)("h3",{id:"boundssize"},"boundsSize"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"{\n    boundsSize: vec2,\n    wrap: boolean\n}\n")),Object(i.b)("h3",{id:"fontparams"},"fontParams"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"{\n    style: string,\n    weight: string,\n    fontSize: number,\n    tracking: number,\n    allCaps: boolean\n}\n")),Object(i.b)("h3",{id:"textalignment-options-horizontaltextalignment"},"textAlignment options: ",Object(i.b)("a",Object(a.a)({parentName:"h3"},{href:"/docs/2.0.2/types/horizontalTextAlignment"}),"HorizontalTextAlignment")))}p.isMDXComponent=!0},412:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):b({},t,{},e)),n},s=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,O=s["".concat(c,".").concat(m)]||s[m]||d[m]||i;return n?r.a.createElement(O,b({ref:t},l,{components:n})):r.a.createElement(O,b({ref:t},l))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=m;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:a,c[1]=b;for(var l=2;l<i;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
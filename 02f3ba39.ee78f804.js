(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{102:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return d}));var n=a(1),r=a(6),l=(a(418),a(412)),b=a(417),c={id:"model",title:"Model"},i={id:"components/model",title:"Model",description:"<PlatformTabs component='model' />\u200b",source:"@site/../docs/components/Model.md",permalink:"/docs/next/components/model",version:"next",sidebar:"docs",previous:{title:"ListViewItem",permalink:"/docs/next/components/listViewItem"},next:{title:"PageView",permalink:"/docs/next/components/pageView"}},o=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Common Events",id:"common-events",children:[]},{value:"Common Properties",id:"common-properties",children:[]},{value:"Create Properties",id:"create-properties",children:[]},{value:"Element Properties",id:"element-properties",children:[{value:"animation",id:"animation",children:[]},{value:"texture",id:"texture",children:[]},{value:"defaultTextureSlot options: TextureType",id:"defaulttextureslot-options-texturetype",children:[]},{value:"texture.textureSlot options: TextureType",id:"texturetextureslot-options-texturetype",children:[]}]}],m={rightToc:o};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)(b.a,{component:"model",mdxType:"PlatformTabs"}),"\u200b",Object(l.b)("h2",{id:"description"},"Description"),Object(l.b)("p",null,"The Model component renders a static or animated 3D model in your scene. Lumin Runtime uses a proprietary material file format called a kmat to bind materials to renderable surfaces. When creating your model, ensure you use <material_name>.kmat to reference the material. Your textures are referenced in the kmat file. We recommend creating kmat files with the Lumin Runtime Editor."),Object(l.b)("h2",{id:"example"},"Example"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import React from "react";\nimport { Model, View, Prism, Scene } from "magic-script-components";\n\nexport default class MyApp extends React.Component {\n  render() {\n    return (\n      <Scene>\n        <Prism size={[1, 1, 0.2]} >\n          <View name="main-view" alignment={\'center-center\'}>\n            <Model\n              localScale={[0.3, 0.3, 0.3]}\n              localRotation={[0.2, 0.38268346, 0.0, 0.9238795]}\n              modelPath={require(\'../../resources/static.glb\')}\n            />\n          </View>\n        </Prism>\n      </Scene>\n    );\n  }\n}\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"FBX file format is currently supported on Magic Leap One.")),Object(l.b)("h2",{id:"common-events"},Object(l.b)("a",Object(n.a)({parentName:"h2"},{href:"/docs/next/events/commonEvents"}),"Common Events")),Object(l.b)("h2",{id:"common-properties"},Object(l.b)("a",Object(n.a)({parentName:"h2"},{href:"/docs/next/types/properties"}),"Common Properties")),Object(l.b)("h2",{id:"create-properties"},"Create Properties"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Required"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"modelPath"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"File name of the model resource to load. By default this is assumed to be a relative path from the executable file.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"materialPath"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"File name of the material resource to load. By default this is assumed to be a relative path from the executable file.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"importScale"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"N"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The scale that is applied to this resource.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"texturePaths"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"[string]"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"An array of file names of the texture resources. By default this is assumed to be a relative path from the executable file.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"defaultTextureIndex"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Default index from the texturePaths.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"defaultTextureSlot"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The texture slot, such as ",Object(l.b)("inlineCode",{parentName:"td"},"Albedo")," or ",Object(l.b)("inlineCode",{parentName:"td"},"Normal"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"defaultMaterialName"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the material.")))),Object(l.b)("h2",{id:"element-properties"},"Element Properties"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"animationPauseState"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"false"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the animation pause state for the current model node.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"animationPlaybackSpeed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the playback speed for animations.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"animationTime"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the current time of the animation.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"modelResourceId"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the ID of the resource this node draws. The ID refers to a ",Object(l.b)("em",{parentName:"td"},"ModelResource"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"animation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("em",{parentName:"td"},"object")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the current animation by ",Object(l.b)("inlineCode",{parentName:"td"},"resource")," + ",Object(l.b)("inlineCode",{parentName:"td"},"name"),". Some animation resources contain multiple animations. These are addressed by animation name. FBX models, for example, may contain 1-n animations.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"texture"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("em",{parentName:"td"},"object")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the texture of a given material by the new texture ID. Material should be the one applied to the Model Node.")))),Object(l.b)("h3",{id:"animation"},"animation"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"{\n    resourceId: <number>,\n    name: <string>,\n    paused: <boolean>,\n    loops: <number>\n}\n")),Object(l.b)("h3",{id:"texture"},"texture"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"{\n    textureId: <number>,\n    textureSlot: <string>,\n    materialName: <string>\n}\n")),Object(l.b)("h3",{id:"defaulttextureslot-options-texturetype"},"defaultTextureSlot options: ",Object(l.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/next/types/textureType"}),"TextureType")),Object(l.b)("h3",{id:"texturetextureslot-options-texturetype"},"texture.textureSlot options: ",Object(l.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/next/types/textureType"}),"TextureType")))}d.isMDXComponent=!0},417:function(e,t,a){"use strict";var n=a(0),r=a.n(n),l=a(414),b=a.n(l),c=a(93),i=a.n(c);const o=37,m=39;var d=function(e){const{block:t,children:a,defaultValue:l,values:c}=e,[d,p]=Object(n.useState)(l),u=[];return r.a.createElement("div",null,r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===d)[0]),r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:b()("tabs",{"tabs--block":t})},c.map(({value:e,label:t},a)=>r.a.createElement("li",{role:"tab",tabIndex:a,"aria-selected":d===e,className:b()("tab-item",i.a.tabItem,{"tab-item--active":d===e}),key:e,ref:e=>u.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case m:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case o:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(u,e.target,e),onFocus:()=>p(e),onClick:()=>p(e)},t))))};var p=function(e){return r.a.createElement("div",{style:{height:"420px"}},e.children)},u=a(415),s=a(416),j=a.n(s);t.a=function(e){const{component:t,extension:a}=e,n=e=>{return"gif"===a?r.a.createElement(j.a,{style:{maxHeight:"400px"},gif:Object(u.a)(`img/components/${t}/${e}.gif`),still:Object(u.a)(`img/components/${t}/${e}.png`)}):r.a.createElement("img",{style:{maxHeight:"400px"},src:Object(u.a)(`img/components/${t}/${e}.${a||"png"}`),alt:`${n=t,`<${n.length>0?n[0].toUpperCase()+n.slice(1):n}>`} on ${e}`});var n};return r.a.createElement("div",null,r.a.createElement(d,{defaultValue:"lumin",values:[{label:"Lumin",value:"lumin"},{label:"iOS",value:"ios"},{label:"Android",value:"android"}]},r.a.createElement(p,{value:"lumin"},n("lumin")),r.a.createElement(p,{value:"ios"},n("ios")),r.a.createElement(p,{value:"android"},n("android"))))}}}]);
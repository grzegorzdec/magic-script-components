(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{135:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(6),i=(n(418),n(412)),l=n(417),c={id:"slider",title:"Slider"},s={id:"components/slider",title:"Slider",description:"<PlatformTabs component='slider' />\u200b",source:"@site/../docs/components/Slider.md",permalink:"/docs/next/components/slider",version:"next",sidebar:"docs",previous:{title:"ScrollView",permalink:"/docs/next/components/scrollView"},next:{title:"Spinner",permalink:"/docs/next/components/spinner"}},o=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Common Events",id:"common-events",children:[]},{value:"Common Properties",id:"common-properties",children:[]},{value:"Create Properties",id:"create-properties",children:[]},{value:"Element Properties",id:"element-properties",children:[]}],d={rightToc:o};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)(l.a,{component:"slider",mdxType:"PlatformTabs"}),"\u200b",Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"The Slider component places a slider into your prism. Use sliders to provide a visual reference to a specific range and the current value within that range, like a volume slider. Sliders can use either icons or labels. The default slider is white and uses 100% opacity for the active part of the slider. Sliders inherit the width from a parent component, such as ",Object(i.b)("inlineCode",{parentName:"p"},"RectLayout"),". If the slider does not have a parent, it is one meter wide unless otherwise constrained. The default minimum and maximum values in the range are ",Object(i.b)("inlineCode",{parentName:"p"},"0")," and ",Object(i.b)("inlineCode",{parentName:"p"},"1"),"."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import React from "react";\nimport { Text, Slider, Image, LinearLayout, View, Prism, Scene } from "magic-script-components";\n\nexport default class MyApp extends React.Component {\n  state = {\n    red: undefined,\n    green: undefined,\n    blue: undefined,\n    alpha: undefined\n  };\n\n  onRedChanged = eventData => this.setState({ red: eventData.Value });\n  onGreenChanged = eventData => this.setState({ green: eventData.Value });\n  onBlueChanged = eventData => this.setState({ blue: eventData.Value });\n  onAlphaChanged = eventData => this.setState({ alpha: eventData.Value });\n\n  _setInitialSliderValue = (sliderProps, currentValue, initialValue) => {\n    if (currentValue === undefined) {\n      sliderProps.value = initialValue;\n    }\n    return sliderProps;\n  };\n\n  render() {\n    const sliderProps = { width: 0.8, height: 0.02, min: 0, max: 1 };\n    const redProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.red,\n      0.5\n    );\n    const greenProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.green,\n      0.5\n    );\n    const blueProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.blue,\n      0.5\n    );\n    const alphaProps = this._setInitialSliderValue(\n      { ...sliderProps },\n      this.state.alpha,\n      0.5\n    );\n\n    const color = [\n      this.state.red === undefined ? redProps.value : this.state.red,\n      this.state.green === undefined ? greenProps.value : this.state.green,\n      this.state.blue === undefined ? blueProps.value : this.state.blue,\n      this.state.alpha === undefined ? alphaProps.value : this.state.alpha\n    ];\n\n    return (\n      <Scene>\n        <Prism size={[1, 1, 0.2]} >\n          <View name="main-view" alignment={\'center-center\'}>\n            <LinearLayout\n              name="main-view"\n              orientation="vertical"\n              defaultItemAlignment="center-left"\n              defaultItemPadding={[0.012, 0.012, 0.012, 0.012]}\n              localPosition={[-0.45, 0.45, 0]}\n            >\n              <Image width={0.8} height={0.3} color={color} useFrame={true} />\n              <Text textSize={0.05} textColor={[1, 0, 0, 1]} text="Red" />\n              <Slider {...redProps} onSliderChanged={this.onRedChanged} />\n              <Text textSize={0.05} textColor={[0, 1, 0, 1]} text="Green" />\n              <Slider {...greenProps} onSliderChanged={this.onGreenChanged} />\n              <Text textSize={0.05} textColor={[0, 0, 1, 1]} text="Blue" />\n              <Slider {...blueProps} onSliderChanged={this.onBlueChanged} />\n              <Text textSize={0.05} text="Alpha" />\n              <Slider {...alphaProps} onSliderChanged={this.onAlphaChanged} />\n            </LinearLayout>\n          </View>\n        </Prism>\n      </Scene>\n    );\n  }\n}\n')),Object(i.b)("h2",{id:"common-events"},Object(i.b)("a",Object(a.a)({parentName:"h2"},{href:"/docs/next/events/commonEvents"}),"Common Events")),Object(i.b)("h2",{id:"common-properties"},Object(i.b)("a",Object(a.a)({parentName:"h2"},{href:"/docs/next/types/properties"}),"Common Properties")),Object(i.b)("h2",{id:"create-properties"},"Create Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Required"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"width"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"N"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The width of the slider.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"height"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"0"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"N"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The height of the slider.")))),Object(i.b)("h2",{id:"element-properties"},"Element Properties"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Default Value"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"min"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"td"},"0")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the minimum slider value. This value is set only if it is less than the slider's maximum value. The default value is ",Object(i.b)("inlineCode",{parentName:"td"},"0"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"max"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"td"},"1")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the maximum slider value. This value is set only if it is greater than the slider's minimum value. The default value is ",Object(i.b)("inlineCode",{parentName:"td"},"1"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"value"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"n/a"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets the slider value. The value will be clamped within the current minimum and maximum range.")))))}b.isMDXComponent=!0},417:function(e,t,n){"use strict";var a=n(0),r=n.n(a),i=n(414),l=n.n(i),c=n(93),s=n.n(c);const o=37,d=39;var b=function(e){const{block:t,children:n,defaultValue:i,values:c}=e,[b,m]=Object(a.useState)(i),p=[];return r.a.createElement("div",null,r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter(e=>e.props.value===b)[0]),r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:l()("tabs",{"tabs--block":t})},c.map(({value:e,label:t},n)=>r.a.createElement("li",{role:"tab",tabIndex:n,"aria-selected":b===e,className:l()("tab-item",s.a.tabItem,{"tab-item--active":b===e}),key:e,ref:e=>p.push(e),onKeyDown:e=>((e,t,n)=>{switch(n.keyCode){case d:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case o:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(p,e.target,e),onFocus:()=>m(e),onClick:()=>m(e)},t))))};var m=function(e){return r.a.createElement("div",{style:{height:"420px"}},e.children)},p=n(415),u=n(416),h=n.n(u);t.a=function(e){const{component:t,extension:n}=e,a=e=>{return"gif"===n?r.a.createElement(h.a,{style:{maxHeight:"400px"},gif:Object(p.a)(`img/components/${t}/${e}.gif`),still:Object(p.a)(`img/components/${t}/${e}.png`)}):r.a.createElement("img",{style:{maxHeight:"400px"},src:Object(p.a)(`img/components/${t}/${e}.${n||"png"}`),alt:`${a=t,`<${a.length>0?a[0].toUpperCase()+a.slice(1):a}>`} on ${e}`});var a};return r.a.createElement("div",null,r.a.createElement(b,{defaultValue:"lumin",values:[{label:"Lumin",value:"lumin"},{label:"iOS",value:"ios"},{label:"Android",value:"android"}]},r.a.createElement(m,{value:"lumin"},a("lumin")),r.a.createElement(m,{value:"ios"},a("ios")),r.a.createElement(m,{value:"android"},a("android"))))}}}]);